<12월 2일>

<학습>
1. login.js 파일에 fetch 메서드에 .then 하부로 .catch((error => {} ); 로 에러 이벤트 표시 가능.
-> console.error(new Error("로그인 중 에러 발생));

2. home.ctrl.js 컨트롤러를 모델로 바꿔줘야함. 내부에 저장된 데이터는 보안상 매우 취약할수있음.
-> 모델로 분리 후에 그 모델이 데이터를 저장하고 있도록 해주어야함. (or DB?)

3. MVC (Model-View-Controller) 구조 에서 Model 은 어떠한 데이터를 저장하고 있는 객체이거나
-> 저장된 데이터를 조작/관리하는 객체이거나. 둘 중 아무거로라도 부를 수 있다.

4. const response = {}; 객체 형식 변수 선언하여 response module 최적화

5. JS 문법 : 클래스 안에 변수를 선언할때는 const 등 선언자 필요없음.

6. 컨트롤러에서 작성한 클래스에서 모델의 UserStorage클래스에 접근 가능하도록 하려면
-> UserStorage 모델에서 UserStorage 클래스 내부, users(변수) 를 선언할때 static(정적) 선언 해줘야함.

7. 은닉화된 내부 데이터 받아오는 방법 : UserStorage.js 내부 UserStorage 클래스 안에 getUsers()메소드 추가.

8. reduce 메서드

9. hasOwnProperty 키워드 사용법


<TroubleShooting>

1. 외부 파일에서 내부 데이터에 접근 ( ex. home.ctrl.js의  process 과정에서 UserStroage 내부 접근 불가해야함.
-> 내부 데이터(class UserStorage)의 users 변수를 은닉화 해야하는데 버전 차이로 # 이용x, "_" 이용 O

2. 내부 데이터를 접근 불가능하게 만들고싶은 경우 변수명을 #으로 감싸면 private 속성이 적용된다
-> 현재 Javascript 버전 업데이트를 통해 #이 아닌 _로 감싸주어야 은닉화가 가능함.
-> 그렇다면 은닉화된 상태에서 어떻게 읽어올것인가? : 학습 7번으로 연계